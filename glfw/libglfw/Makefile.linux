
ifndef PREFIX
$(error "PREFIX env var not defined")
endif

# extra flags gleaned from compile.sh
CFLAGS += \
 -D_GLFW_HAS_XRANDR \
 -D_GLFW_USE_LINUX_JOYSTICKS \
 -D_GLFW_HAS_XRANDR \
 -D_GLFW_HAS_PTHREAD \
 -D_GLFW_HAS_SCHED_YIELD \
 -D_GLFW_HAS_GLXGETPROCADDRESS \
 -D_GLFW_HAS_SYSCONF  \
 -pthread

CFLAGS += -O0
#CFLAGS += -O2
CFLAGS += -Wall

# extra flags gleaned from compile.sh
LFLAGS += \
 -lXrandr \
 -lXrandr \
 -lX11 \
 -lGL \
 -pthread \
 -lm

LFLAGS += -shared

#SOFLAGS      = -shared -Wl,-soname,libglfw.so

##########################################################################
# Makefile for GLFW on Cocoa on Mac OS X using Apple GCC
#-------------------------------------------------------------------------
# To compile GLFW using this makefile, run:
#  make -f Makefile.osx
##########################################################################

all: libglfw.so


##########################################################################
# Compiler settings
##########################################################################
CC     ?= cc
CFLAGS += -c -I. -Iinclude -Ix11 -Wall -fno-common -g -DPLATFORM_X11 -fPIC


##########################################################################
# Library builder settings
##########################################################################
AR       = ar
LD       = ld
SED      = sed
INSTALL  = install
ARFLAGS  = -rcs
HEADERS  = include/GL/glfw.h internal.h x11/platform_x11.h
#LFLAGS   = -shared




##########################################################################
# Object files for the GLFW library
##########################################################################
OBJS = \
       enable.o \
       fullscreen.o \
       glext.o \
       image.o \
       init.o \
       input.o \
       joystick.o \
       stream.o \
       tga.o \
       thread.o \
       time.o \
       window.o \
       x11_enable.o \
       x11_fullscreen.o \
       x11_glext.o \
       x11_init.o \
       x11_joystick.o \
       x11_keysym2unicode.o \
       x11_thread.o \
       x11_time.o \
       x11_window.o



##########################################################################
# Rule for building shared library
##########################################################################
#	$(CC) -o $@ $(LFLAGS) $(OBJS) -Wl,-soname,libglfw.so
#	$(CC) -o $@ $(LFLAGS) $(OBJS)
#	$(CC) -o $@ $(LFLAGS) $(OBJS) -Wl,-soname,$(PREFIX)/libglfw.so
#	$(CC) -o $@ $(LFLAGS) $(OBJS) -Wl,-soname,libglfw.so
libglfw.so: $(OBJS)
	$(CC) -o $@ $(LFLAGS) $(OBJS) -Wl,-soname,$(PREFIX)/libglfw.so


##########################################################################
# Rules for building library object files
##########################################################################
enable.o: enable.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ enable.c

fullscreen.o: fullscreen.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ fullscreen.c

glext.o: glext.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ glext.c

image.o: image.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ image.c

init.o: init.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ init.c

input.o: input.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ input.c

joystick.o: joystick.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ joystick.c

stream.o: stream.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ stream.c

tga.o: tga.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ tga.c

thread.o: thread.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ thread.c

time.o: time.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ time.c

window.o: window.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ window.c

x11_enable.o: x11/x11_enable.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_enable.c

x11_fullscreen.o: x11/x11_fullscreen.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_fullscreen.c

x11_glext.o: x11/x11_glext.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_glext.c

x11_init.o: x11/x11_init.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_init.c

x11_joystick.o: x11/x11_joystick.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_joystick.c

x11_thread.o: x11/x11_thread.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_thread.c

x11_time.o: x11/x11_time.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_time.c

x11_window.o: x11/x11_window.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_window.c

x11_keysym2unicode.o: x11/x11_keysym2unicode.c $(HEADERS)
	$(CC) $(CFLAGS) -o $@ x11/x11_keysym2unicode.c



##########################################################################
# Clean
##########################################################################

clean:
	rm -f $(OBJS) libglfw.so 

