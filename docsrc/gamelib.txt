==============================================================================
                                                        *gamelib*
gamelib

|input|
|functions|
|drawing|
|game_loop|
|examples|

                                                        *input*
INPUT

See |glfw| for handling input.

                                                        *functions*

FUNCTIONS

Function reference for the gamelib module. Below are the documented public functions
for the gamelib framework.

|draw_rect|
|open_window|
|update|
|win_width|
|win_height|
|window_closed|

                                                        *draw_rect*
draw_rect()	

Draws a rectangle in the screen buffer.

Params:
	x			type: number, descrip: x position of rectagle lower-left corner
	y			type: number, descrip: y position of rectagle lower-left corner
	w			type: number, descrip: width of rectangle
	h			type:	number, descrip: height of rectangle

Returns:
	nil

Notes:
	Draws a filled 2D rectangle using the current color. To change the color,
	use |gl.color3f|.

	The x,y coordinates are relative to the lower-left corner of the screen.

                                                        *open_window*
open_window() 

Creates the game window. This is typically one of the first functions called
when creating a game. It creates and displays a window with an OpenGL context
for drawing.

A default background color is defined. A default projection matrix is defined
in orthographic mode, with (left, right, bot, top) = (0, width, 0, height) 
and (near, far) = (-1, 1).

Params:
	title		
					type: 		string 
					descrip: 	caption to be displayed in the window title area
					optional:	true
					default:	'Game'

Returns:
	nil

Notes:
	- On failure the lua error() function is called.
	- The game fps (frames per second) metric is currently appended to the title.

See Also:
	|win_width|
	|win_height|
	|window_closed|
                                                        *update* 
update()

Performs internal gamelib updates, should be called at the end of every game loop.
Specifically, the following is done:
	- updates the screen with the opengl graphics buffer
	- updates glfw input buffers (keyboard and mouse)
	- clears the opengl graphics buffer
	- calculates fps

Params:
	None

Returns:
	nil	

                                                        *win_width* 
win_width()

Returns width of game window client area, in pixels.

Params:
	None

Returns:
	width 		type: number

See Also:
	|win_height|

                                                        *win_height*
win_height()

Returns height of game window client area, in pixels.

Params:
	None

Returns:
	height 		type: number

See Also:
	|win_width|

                                                        *window_closed*
window_closed()                                  

Status function used to determine if the game window has been closed.
Typically used for checking when to exit the main loop of the game app.

Params:
	None

Returns:
	flag		type: 		boolean
					descrip:  true if window closed, else false.
	
See Also:
	|open_window|


 vim:tw=78:sw=4:ts=2:ft=help:norl
