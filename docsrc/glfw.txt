==============================================================================
                                                        *glfw*
2. glfw

glfw is lua wrapper around the glfw C library. See glfwrm.txt and glfwum.txt
for additional documentation of the C library.

NOTE: all these functions can only be called _after_ glfw.init()

|closeWindow|
|disable|
|enable|
|extensionSupported|
|getJoystickParam|
|getKey|
|getMouseButton|
|getMouseWheel|
|getNumberOfProcessors|
|getTime|
|getWindowParam|
|getWindowSize|
|iconifyWindow|
|init|
|loadTexture2D|
|openWindow|
|openWindowHint|
|pollEvents|
|restoreWindow|
|setKeyCallback|
|setMousePos|
|setMouseWheel|
|setTime|
|setWindowSize|
|setWindowPos|
|setWindowTitle|
|sleep|
|swapBuffers|
|swapInterval|
|terminate|
|waitEvents|

*functions*

                                                        *getKey*
getKey()

Returns the state of a specific keyboard key.

Params:
	key_code		type: 		number
							descrip:	glfw.GLFW_KEY_XXX (see keycodes table TODO: create table)

Returns:
	key_state		type:			number
							descrip:	glfw.GLFW_PRESS if key down, else glfw.GLFW_RELEASE

Notes:
	- See 'glfw_key.txt' for a list of keycodes
	- The key codes table doesn't contains codes for the printable keys in the
		ascii set like 'A-Z', '0-9', and punctuation keys. To specify the codes
		for these keys, specify the key as a single-character string
		converted to a number using the lua string.byte() function. 
		For example:
				if glfw.getKey(string.byte('A')) == glfw.GLFW_PRESS then
					-- do something for 'A' key press
					...
				end 

 vim:tw=78:sw=4:ts=2:ft=help:norl
